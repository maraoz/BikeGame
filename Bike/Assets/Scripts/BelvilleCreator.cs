using UnityEngine;

[ExecuteInEditMode()]
public class BelvilleCreator : MonoBehaviour {

    public GameObject waypoint;
    public float fullDistance = 250f;
    public float straightDistance = 150f;
    public int curveResolution = 30;
    public int straightResolution = 5;
    public int terrainPaintSize = 10;

    public GameObject[] created;
    private int current = 0;


    internal GameObject[] GetWaypoints() {
        return created;
    }

    void Start() {
        DoDestroy();
        DoCreate();
    }

    public void DoCreate() {
        string coords = @"18.641750,-33.863117,0.000000
        18.641649,-33.863232,0.000000
        18.641689,-33.863258,0.000000
        18.641621,-33.863640,0.000000
        18.641520,-33.863899,0.000000
        18.641150,-33.864491,0.000000
        18.641090,-33.864681,0.000000
        18.640841,-33.865650,0.000000
        18.640511,-33.867321,0.000000
        18.640400,-33.867481,0.000000
        18.640209,-33.867569,0.000000
        18.640209,-33.867569,0.000000
        18.640200,-33.867649,0.000000
        18.640120,-33.867680,0.000000
        18.640060,-33.867592,0.000000
        18.639610,-33.867519,0.000000
        18.639610,-33.867519,0.000000
        18.639080,-33.867439,0.000000
        18.638790,-33.867340,0.000000
        18.637430,-33.866180,0.000000
        18.636950,-33.865570,0.000000
        18.636829,-33.865070,0.000000
        18.636829,-33.865070,0.000000
        18.636629,-33.865051,0.000000
        18.636080,-33.864891,0.000000
        18.635530,-33.864559,0.000000
        18.634001,-33.863209,0.000000
        18.633869,-33.862900,0.000000
        18.633869,-33.862900,0.000000
        18.633810,-33.862862,0.000000
        18.632080,-33.862942,0.000000
        18.631710,-33.862869,0.000000
        18.631371,-33.862728,0.000000
        18.630871,-33.862350,0.000000
        18.630260,-33.861351,0.000000
        18.629511,-33.860661,0.000000
        18.629219,-33.860512,0.000000
        18.628929,-33.860432,0.000000
        18.628590,-33.860409,0.000000
        18.627119,-33.860531,0.000000
        18.627119,-33.860531,0.000000
        18.627100,-33.859421,0.000000
        18.627110,-33.859409,0.000000
        18.626850,-33.859421,0.000000
        18.626770,-33.859539,0.000000
        18.625469,-33.859760,0.000000
        18.625259,-33.859711,0.000000
        18.625099,-33.859741,0.000000
        18.624720,-33.859631,0.000000
        18.624310,-33.859680,0.000000
        18.624081,-33.859581,0.000000
        18.623989,-33.859451,0.000000
        18.623720,-33.859322,0.000000
        18.623260,-33.858952,0.000000
        18.622511,-33.858608,0.000000
        18.622110,-33.858742,0.000000
        18.621120,-33.858921,0.000000
        18.620131,-33.859058,0.000000
        18.619869,-33.859020,0.000000
        18.617649,-33.857399,0.000000
        18.617540,-33.857449,0.000000
        18.617430,-33.857380,0.000000
        18.617331,-33.857208,0.000000
        18.616739,-33.856628,0.000000
        18.614920,-33.854630,0.000000
        18.612711,-33.852291,0.000000
        18.612579,-33.852219,0.000000
        18.611441,-33.852032,0.000000
        18.609846,-33.851761,0.000000
        18.608313,-33.851498,0.000000
        18.608047,-33.851463,0.000000
        18.607697,-33.851490,0.000000
        18.607504,-33.851452,0.000000
        18.606771,-33.851223,0.000000
        18.605757,-33.850967,0.000000
        18.605659,-33.850960,0.000000
        18.605494,-33.850986,0.000000
        18.605293,-33.850967,0.000000
        18.604990,-33.850834,0.000000
        18.604816,-33.850777,0.000000
        18.604853,-33.850540,0.000000
        18.603848,-33.850758,0.000000
        18.602924,-33.850563,0.000000
        18.602827,-33.850742,0.000000
        18.602720,-33.850838,0.000000
        18.602678,-33.850948,0.000000
        18.601093,-33.851288,0.000000
        18.599148,-33.851727,0.000000
        18.597740,-33.852024,0.000000
        18.597471,-33.852020,0.000000
        18.597359,-33.852123,0.000000
        18.597364,-33.852161,0.000000
        18.597284,-33.852192,0.000000
        18.597237,-33.852303,0.000000
        18.597403,-33.852959,0.000000
        18.597404,-33.852962,0.000000";
        string[] lines = coords.Split('\n');
        created = new GameObject[lines.Length];
        
        foreach (string line in lines) { 
            string[] vec = line.Split(',');
            float scale = 1000;
            float x = scale*float.Parse(vec[0]);
            float y = scale*float.Parse(vec[2]); //swapped on purpose
            float z = scale*float.Parse(vec[1]); //swapped on purpose
            CreateWaypoint(new Vector3(x, y, z));
        }



    }

    void CreateWaypoint(Vector3 position) {
        created[current] = Instantiate(waypoint, position, Quaternion.identity) as GameObject;
        TerrainHelper.SetTexture(position, 0, terrainPaintSize);
        current += 1;
    }



    public void DoDestroy() {
        foreach (GameObject wp in GameObject.FindGameObjectsWithTag("Waypoint")) {
            TerrainHelper.SetTexture(wp.transform.position, 1, terrainPaintSize);
            DestroyImmediate(wp);
        }
    }
}